function [y1] = inverted_NNMcGlashan_biphasic_aqPhase85to1_KGv4(x1)
%NN_BIPHASICWATERRICH_LAYERS30 neural network simulation function.
%
% Auto-generated by MATLAB, 30-Oct-2018 02:04:46.
% 
% [y1] = NN_biphasicWaterRich_layers30(x1) takes these arguments:
%   x = 3xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.00043947731310994;1.93618465343371e-05;0.00232982375509366];
x1_step1.gain = [4.73564679292502;9.33014151076842;2.00467059945835];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.5241383187468064975;0.51921161513315716718;-40.190853409413932695;-4.8864155520264178634;4.0442467721614550058;-1.4362292714426392326;28.58608707740801691;26.736370589992606739;21.953658591752912344;-4.6282830494696165502;-26.448791165369645029;18.637126187738157768;0.0034716262356093438926;-0.22592771772036104871;0.92325336281881864586;7.3325375432678860932;2.2084318352610523561;-7.7483071661085665127;-17.225547166164766111;-25.67881122944408645;-1.5360374096713504954;-1.9225591249303537467;-2.366808271755490356;-7.8976903340175050872;28.371177095307931637;-2.3187360486361385803;-1.6280229122987188717;7.5422561682591728882;2.0825877163802912762;-7.9310036447100644708];
IW1_1 = [0.45848899287913802425 -1.147596103400736256 -1.7771731587040151545;-0.84411406150344281407 -1.8230437434708262057 0.96342620378434451478;1.836837291537325223 3.4103408737928453398 41.007392558070719701;0.79342543737001502979 -3.0038098061267586303 -1.2338494595598172854;-0.63868792648304095749 2.4721236960526744575 1.5332182300729659818;2.2360157125807944567 3.815824261771049386 -5.888124669102424491;-3.648117031793992826 37.498677752197423274 -2.3554751984945045962;0.011398932193149937525 31.718484132451685298 -4.1977283452941263064;-2.6758827225972683372 29.405552921120264642 -1.8007110255795841791;-10.442514456388879651 -6.5120053045771619793 0.057769125355912359643;-0.002428366164193249653 -31.393603414453991718 4.1452604692594743341;8.0779705008096058805 17.638061802818814527 -1.4267623130280424615;-0.84553877517116438067 -1.8361831573656961503 1.4878297782427538642;1.422123377905449626 -5.174489641004534235 6.8164747829683820513;-6.5714473772292629761 -2.2255015209953010746 2.4869107707206317137;11.662392625644452337 7.1552214495122230531 -2.2167215536857769465;-0.25305755973392096703 0.98162586929598383279 2.0755385842682603226;-12.130910944137820451 -7.4161890575738400599 2.4185413051549069507;2.7184663045687513794 -30.464877150563449248 -3.430150740037758883;-14.888197943117123856 -28.500037218102395542 -0.10649495210693145364;-1.1243764938869684755 2.8465864204952131544 -4.2982517067937049404;0.26999216247030050075 1.8194317679100293628 -3.0387203931277642077;1.8433830679985458989 2.5170126078711105855 -5.3396924519321453673;-1.821431329849135361 -7.893365523218345281 0.59053840029906001785;15.102385907730653258 29.001526086579858088 -2.1992023368647446446;-2.5226183398141164282 -0.81316242833693208603 -1.5305241390955177661;-1.3239960265375219084 -2.3074418730782313425 1.3178476144443154183;2.1554420169446877331 -1.4312631782947418113 8.1120110418719981737;1.2214210073393714229 -2.7625853315756034867 4.9363146138979159261;-1.7943863661595014225 -7.8808699633866146073 0.62805667344049853629];

% Layer 2
b2 = 0.69467661393013968585;
LW2_1 = [-31.872805717550434679 10.931244997750878767 -0.24560348708193943668 -25.101687484047818799 -36.050264972822027687 14.828701403511880486 -1.889810054914026205 4.9638627404075963412 6.0198293837512748539 -1.8613410058715036399 5.1011722507861785303 0.12745062863135628306 -10.697948413969378123 -0.22146914024357627904 -0.017728769429168140387 -7.0803140032584890307 -8.23182627344168516 -5.2287781927237029223 4.0110350309822022652 2.8602412545995266058 -8.5761353665815729386 25.079262823107708158 -24.362125986423485813 4.1367288527300880574 2.8197031881691954069 0.044428457549612256072 -0.30953132002739541795 -0.47945607997129885414 -6.8115199370279473357 -4.0699386604165734838];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 9.11161884600578;
y1_step1.xoffset = 3.69526287832267e-08;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
