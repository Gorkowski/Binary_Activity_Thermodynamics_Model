function [y1] = inverted_NNMcGlashan_singlephase_only85to1_KGv4(x1)
%NN_SINGLEPHASE_LAYERS30 neural network simulation function.
%
% Auto-generated by MATLAB, 29-Oct-2018 07:30:29.
% 
% [y1] = NN_singlephase_layers30(x1) takes these arguments:
%   x = 3xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.344645765925252;0.0258975463835677;0.85];
x1_step1.gain = [0.928779675738426;9.3409524088114;13.3333333333333];
x1_step1.ymin = -1;

% Layer 1
b1 = [0.99069859039405017143;4.9254336768367306121;3.2675628405460583892;-2.3666061162108369409;-1.1177777632680285791;0.82894171745139011431;-1.1137570772792622087;-1.1467647073226088228;0.88720937264180277371;3.944358956720357412;23.530058106552644404;-1.8608649667954026974;-1.9663215412191688003;-2.8320264063459199555;1.0952311547349522503;0.075970149193093347573;-21.134273118581667461;-2.7620488007432344446;-20.720838443010642038;-14.83142632379068715;2.7446577064820827374;-1.1492299504960097334;-20.618332122406094697;12.248837776207198047;-31.036279137339480627;22.676051775747673389;6.5589762647041860433;16.390697354561368115;15.442865976075287548;-26.175321067918016382];
IW1_1 = [-0.067317254029616746536 -0.082187646230829816685 -0.26055652847558791185;0.194076261699464514 -3.4080856468593649922 -2.0167372548601796289;-1.9684813911402909703 -1.0245133343605754561 0.61700980331104038346;-0.1019401303242608442 -1.9905658122802334375 -0.48781167912666023589;0.50112437568476786431 0.87416133859134748096 -1.1533565357530031203;-0.10940741450559049452 0.3111616104701166452 -0.44138030331844851917;-0.80316423592025676381 0.91966773759497222329 1.0281421267731214453;-0.67649103385009434763 0.98534086908087636925 0.99817009253863397955;-0.21836798995435036108 -0.81900001037156766603 0.95888570320468602404;4.1343801816402203642 0.015460181221895201789 0.54587971954498482052;25.334175397183479106 1.975766732093855893 1.8356886799731453319;0.36444638058140110815 2.0994777537787085997 -0.00044885811092060245997;-3.1329499708280796888 3.4205608330623173963 0.2257626144394843104;-3.5579493366057546311 0.57591234912982069982 -0.12276489974018864326;0.93734811595067479839 -0.87750305718589871606 -1.0674804582831314281;-0.10023651836769804924 -0.85070986508673884785 0.2432877596207901616;-21.931686305862662323 -2.6432264864030958762 -2.5661476579581647961;-3.356332379054527415 0.69835375215262862625 -0.097405801981390149891;-21.074071136177987995 -2.8932473863330301356 -2.8439070079976813687;-16.258034672724193115 -1.3065950353349102819 -1.2326365136008747836;3.2193982626181969486 -0.84240638820041147117 0.073354474856438658947;0.086689748985987538643 -0.93077534824464369656 0.38940401473179669933;-21.172602678981217394 -2.7347419956381835426 -2.6671497000984110137;10.74201285529095351 -0.028643195252647676852 0.69635059378969332844;-32.32440265382516742 -2.7896382705269813229 -2.5856868459438042684;23.299413435880534706 1.6126879133392879595 1.6065604932625097145;4.3784675165808799591 -0.6466278503408465772 0.20265083427406263561;14.943056555583703826 -0.31649669756797899067 1.3691560863494989242;16.321008482460189981 1.2802716764285797524 1.2038447439153074914;-27.015738352881353279 -1.6540692943564878625 -1.7400286770400141823];

% Layer 2
b2 = -2.0196006273298587885;
LW2_1 = [4.4157795490052791365 -0.05032831478058438085 -0.031356473194245122749 -0.16095019021978013152 0.062971888703874115412 -1.5729512050303173787 -4.2740820345943948411 2.4404402765109161066 0.10730317638953174031 -0.21703301438067626461 -3.0952297259331404966 0.025094516528852257864 -0.0085973124849033685096 -1.7975130272933899089 -1.8819313160712756172 -0.35140382449828871936 6.7962790761039171272 3.758935516399776855 5.0552648117852641008 4.461196051593145917 1.9590573208914496828 -0.51677913896736604737 -11.813321619714763244 -7.2203284990512948127 1.5601172386471080511 -8.611108871236103468 4.7841291075444525305 0.86431181733662676425 14.650851613490823766 -3.4768162675060598765];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 3.66001869280365;
y1_step1.xoffset = 0;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
